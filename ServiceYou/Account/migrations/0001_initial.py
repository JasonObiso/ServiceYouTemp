# Generated by Django 4.2.6 on 2023-10-10 07:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('Username', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('Password', models.CharField(max_length=20)),
                ('FirstName', models.CharField(max_length=30)),
                ('LastName', models.CharField(max_length=30)),
                ('MiddleName', models.CharField(max_length=30)),
                ('PhoneNo', models.CharField(max_length=11)),
                ('Email', models.EmailField(max_length=254)),
                ('Address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='Account.user')),
                ('ClientID', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            bases=('Account.user',),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='Account.user')),
                ('WorkerID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('Status', models.BooleanField()),
            ],
            bases=('Account.user',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('ServiceID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('ServiceType', models.CharField(max_length=100)),
                ('WorkerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.worker')),
            ],
            options={
                'unique_together': {('WorkerID', 'ServiceType')},
            },
        ),
    ]
